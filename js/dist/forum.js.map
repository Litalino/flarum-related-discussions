{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@litalino/flarum-related-discussions/webpack/bootstrap","webpack://@litalino/flarum-related-discussions/webpack/runtime/compat get default export","webpack://@litalino/flarum-related-discussions/webpack/runtime/define property getters","webpack://@litalino/flarum-related-discussions/webpack/runtime/hasOwnProperty shorthand","webpack://@litalino/flarum-related-discussions/webpack/runtime/make namespace object","webpack://@litalino/flarum-related-discussions/external root \"flarum.core.compat['forum/app']\"","webpack://@litalino/flarum-related-discussions/external root \"flarum.core.compat['common/extend']\"","webpack://@litalino/flarum-related-discussions/external root \"flarum.core.compat['forum/components/PostStream']\"","webpack://@litalino/flarum-related-discussions/external root \"flarum.core.compat['forum/components/DiscussionPage']\"","webpack://@litalino/flarum-related-discussions/external root \"flarum.core.compat['common/helpers/avatar']\"","webpack://@litalino/flarum-related-discussions/external root \"flarum.core.compat['common/components/Link']\"","webpack://@litalino/flarum-related-discussions/external root \"flarum.core.compat['tags/helpers/tagsLabel']\"","webpack://@litalino/flarum-related-discussions/external root \"flarum.core.compat['common/components/Separator']\"","webpack://@litalino/flarum-related-discussions/external root \"flarum.core.compat['common/components/Tooltip']\"","webpack://@litalino/flarum-related-discussions/external root \"flarum.core.compat['common/helpers/username']\"","webpack://@litalino/flarum-related-discussions/./src/forum/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/PostStream'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/avatar'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Link'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['tags/helpers/tagsLabel'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Separator'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Tooltip'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/username'];","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport PostStream from 'flarum/forum/components/PostStream';\nimport DiscussionPage from 'flarum/forum/components/DiscussionPage';\nimport avatar from 'flarum/common/helpers/avatar';\nimport Link from 'flarum/common/components/Link';\nimport tagsLabel from 'flarum/tags/helpers/tagsLabel';\nimport Separator from 'flarum/common/components/Separator';\nimport Tooltip from 'flarum/common/components/Tooltip';\nimport username from 'flarum/common/helpers/username';\n\napp.initializers.add('litalino/related-discussions', () => {\n  extend(PostStream.prototype, 'oncreate', function () {\n    const discTitle = this.attrs.discussion;\n    const limitRelated = app.forum.attribute('litalino-related-discussions.relatedLimit') || 4;\n    const elem = document.getElementById('listRel');\n\n    let relDisc = app.store\n      .find('discussions', {\n        page: { limit: limitRelated + 1 },\n        'filter[q]': discTitle.data.attributes.title,\n      })\n      .then((results) => {\n        this.relDiscussion = results;\n\n        const RelatedComp = () => {\n          const DisplayRelated = this.relDiscussion.splice(1, limitRelated);\n          const showTooltip = app.forum.attribute('litalino-related-discussions.showTooltip');\n\n          return {\n            view: () => (\n              <div className=\"wraprelated\">\n                <h1 className=\"DiscussionListItem-title related\">\n                  <i className=\"fas fa-indent relatedTitle\" />\n                  {app.forum.attribute('litalino-related-discussions.relatedTitle') ||\n                    app.translator.trans('litalino-related-discussions.forum.reldiscussion')}\n                </h1>\n                <div className=\"related-discussions\" role=\"navigation\">\n                  {DisplayRelated.map((relDisc) => {\n                    const createdAtDate = relDisc.data?.attributes?.createdAt.slice(0,10)\n                    console.log(relDisc)\n                    const bestAnswer = {\n                      view: function (vnode) {\n                        if (relDisc.data.attributes.hasBestAnswer !== false && relDisc.data.attributes.hasBestAnswer !== undefined) {\n                          return m(\n                            'span',\n                            {\n                              classname: 'has-best-answer',\n                              id: 'has-best-answer',\n                              title: app.translator.trans('litalino-related-discussions.forum.hasBestAnswer-title'),\n                            },\n                            app.translator.trans('litalino-related-discussions.forum.hasBestAnswer')\n                          );\n                        }\n                      },\n                    };\n                    return (\n                      <div className=\"DiscussionListItem-content Slidable-content read related\">\n                        <Link href={`${app.forum.attribute('baseUrl')}/u/${relDisc.user().data?.attributes?.username}`}>\n                          <Tooltip text={`${relDisc.user().data?.attributes?.username} ${app.translator.trans('litalino-related-discussions.forum.avatarTooltip')} ${createdAtDate}`}>\n                            {avatar(relDisc.user(), {\n                              title: relDisc.user().data?.attributes?.username,\n                              className: 'relatedAvatar',\n                            })}\n                          </Tooltip>\n                        </Link>\n                        {showTooltip === true ? (\n                          <Tooltip\n                            className=\"tooltip-related\"\n                            text={\n                              relDisc\n                                .firstPost()\n                                .contentHtml()\n                                .replace(/<\\/?[^>]+(>|$)/g, '')\n                                .substr(0, 200) + '...'\n                            }\n                          >\n                            <Link className=\"DiscussionListItem-main related\" title={relDisc.title()} href={app.route.discussion(relDisc)}>\n                              <h3 className=\"DiscussionListItem-title related\">\n                                {relDisc.title()} {m(bestAnswer)}\n                              </h3>\n                              <ul className=\"DiscussionListItem-info related\">\n                                <li className=\"item-terminalPost\">\n                                  <span>\n                                    <i aria-hidden=\"true\" className=\"icon fas fa-reply \" />{' '}\n                                    <span className=\"username\">{username(relDisc.lastPostedUser())}</span>\n                                    <span className=\"replied-on\">{app.translator.trans('litalino-related-discussions.forum.repliedOn')} </span>\n                                    <time dateTime={relDisc.data.attributes.lastPostedAt}>\n                                      {app.translator.trans('litalino-related-discussions.forum.postedOn')}{' '}\n                                      {relDisc.data.attributes.lastPostedAt.slice(0, 10)}\n                                    </time>\n                                  </span>\n                                </li>\n                              </ul>\n                            </Link>\n                          </Tooltip>\n                        ) : (\n                          <Link className=\"DiscussionListItem-main related\" title={relDisc.title()} href={app.route.discussion(relDisc)}>\n                            <h3 className=\"DiscussionListItem-title related\">\n                              {relDisc.title()} {m(bestAnswer)}\n                            </h3>\n                            <ul className=\"DiscussionListItem-info related\">\n                              <li className=\"item-terminalPost\">\n                                <span>\n                                  <i aria-hidden=\"true\" className=\"icon fas fa-reply \" />{' '}\n                                  <span className=\"username\">{username(relDisc.lastPostedUser())}</span>\n                                  <span className=\"replied-on\">{app.translator.trans('litalino-related-discussions.forum.repliedOn')} </span>\n                                  <time dateTime={relDisc.data.attributes.lastPostedAt}>\n                                    {app.translator.trans('litalino-related-discussions.forum.postedOn')}{' '}\n                                    {relDisc.data.attributes.lastPostedAt.slice(0, 10)}\n                                  </time>\n                                </span>\n                              </li>\n                            </ul>\n                          </Link>\n                        )}\n                        <span className=\"DiscussionListItem-count related\">\n                          {tagsLabel(relDisc.tags(), {\n                            link: true,\n                            className: 'related-tag',\n                          })}\n                        </span>\n                      </div>\n                    );\n                  })}\n                </div>\n                <div className=\"separator-related\">\n                  <Separator />\n                </div>\n              </div>\n            ),\n          };\n        };\n        m.mount(elem, RelatedComp);\n      });\n  });\n  extend(PostStream.prototype, 'view', function (vdom) {\n    if (app.forum.attribute('litalino-related-discussions.enable.DiscussionPageLayout') === false) {\n      if (vdom.children && vdom.children.splice) {\n        const insert = m('div', {\n          key: 'litalino-relatedDisc',\n          className: 'relatedList',\n          id: 'listRel',\n        });\n        vdom.children.splice(1, 0, insert);\n      }\n    }\n  });\n  extend(DiscussionPage.prototype, 'view', function (vdom) {\n    if (app.forum.attribute('litalino-related-discussions.enable.DiscussionPageLayout') === true) {\n      if (vdom.children && vdom.children.splice) {\n        const insert = m('div', {\n          key: 'litalino-relatedDisc-DiscussionPage',\n          className: 'container related',\n          id: 'listRel',\n        });\n        vdom.children.splice(2, 0, insert);\n      }\n    }\n  });\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","app","add","extend","PostStream","_this","discTitle","this","attrs","discussion","limitRelated","attribute","elem","document","getElementById","find","page","limit","data","attributes","title","then","results","relDiscussion","m","mount","DisplayRelated","splice","showTooltip","view","className","trans","role","map","relDisc","_relDisc$data","_relDisc$user$data","_relDisc$user$data2","_relDisc$user$data3","createdAtDate","createdAt","slice","console","log","bestAnswer","vnode","hasBestAnswer","undefined","classname","id","Link","href","user","username","Tooltip","text","avatar","firstPost","contentHtml","replace","substr","lastPostedUser","dateTime","lastPostedAt","tagsLabel","tags","link","Separator","vdom","children","insert","DiscussionPage"],"sourceRoot":""}